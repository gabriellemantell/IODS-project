cex = tex, col=color, pos=3)
}
classes <- as.numeric(train$crime)
plot(lda.fit, col = classes, pch = classes, dimen = 2)
lda.arrows(lda.fit, myscale = 1)
library(MASS); library(tidyr); library(dplyr); library(ggplot2); library(GGally); library(corrplot)
# Load data
data("Boston")
str(Boston)
summary(Boston)
str(Boston)
summary(Boston)
# Load libraries
library(MASS); library(tidyr); library(dplyr); library(ggplot2); library(GGally); library(corrplot)
# Load data
data("Boston")
str(Boston)
summary(Boston)
pairs(Boston)
cor_matrix<-cor(Boston)
print(cor_matrix)
corrplot(cor_matrix, method="circle", type = "upper", cl.pos = "b", tl.pos = "d", tl.cex = 0.6) %>% round(digits = 2)
boston_scaled <- scale(Boston)
summary(boston_scaled)
class(boston_scaled)
boston_scaled <- as.data.frame(boston_scaled)
summary(boston_scaled$crim)
bins <- quantile(boston_scaled$crim)
bins
crime <- cut(boston_scaled$crim, breaks = bins, include.lowest = TRUE, label = c("low", "med_low", "med_high", "high"))
table(crime)
boston_scaled <- dplyr::select(boston_scaled, -crim)
boston_scaled <- data.frame(boston_scaled, crime)
n <- nrow(boston_scaled)
ind <- sample(n,  size = n * 0.8)
train <- boston_scaled[ind,]
test <- boston_scaled[-ind,]
correct_classes <- test$crime
test <- dplyr::select(test, -crime)
# Load libraries
library(MASS); library(tidyr); library(dplyr); library(ggplot2); library(GGally); library(corrplot)
# Load data
data("Boston")
str(Boston)
summary(Boston)
pairs(Boston)
cor_matrix<-cor(Boston)
print(cor_matrix)
corrplot(cor_matrix, method="circle", type = "upper", cl.pos = "b", tl.pos = "d", tl.cex = 0.6) %>% round(digits = 2)
boston_scaled <- scale(Boston)
summary(boston_scaled)
class(boston_scaled)
boston_scaled <- as.data.frame(boston_scaled)
summary(boston_scaled$crim)
bins <- quantile(boston_scaled$crim)
bins
crime <- cut(boston_scaled$crim, breaks = bins, include.lowest = TRUE, label = c("low", "med_low", "med_high", "high"))
table(crime)
boston_scaled <- dplyr::select(boston_scaled, -crim)
boston_scaled <- data.frame(boston_scaled, crime)
n <- nrow(boston_scaled)
ind <- sample(n,  size = n * 0.8)
train <- boston_scaled[ind,]
test <- boston_scaled[-ind,]
lda.fit <- lda(crime ~ ., data = train)
lda.fit
lda.arrows <- function(x, myscale = 1, arrow_heads = 0.1, color = "red", tex = 0.75, choices = c(1,2)){
heads <- coef(x)
arrows(x0 = 0, y0 = 0,
x1 = myscale * heads[,choices[1]],
y1 = myscale * heads[,choices[2]], col=color, length = arrow_heads)
text(myscale * heads[,choices], labels = row.names(heads),
cex = tex, col=color, pos=3)
}
classes <- as.numeric(train$crime)
plot(lda.fit, col = classes, pch = classes, dimen = 2)
lda.arrows(lda.fit, myscale = 1)
correct_classes <- test$crime
test <- dplyr::select(test, -crime)
setwd("~/GitHub/IODS-project/data")
library(dplyr); library(stringr)
BPRS <- read.table("https://raw.githubusercontent.com/KimmoVehkalahti/MABS/master/Examples/data/BPRS.txt", sep  =" ", header = T)
BPRS <- read.table("https://raw.githubusercontent.com/KimmoVehkalahti/MABS/master/Examples/data/BPRS.txt", sep  =" ", header = T)
names(BPRS)
str(BPRS)
summary(BPRS)
str(BPRS)
str(RATS)
RATS <- read.table("https://raw.githubusercontent.com/KimmoVehkalahti/MABS/master/Examples/data/rats.txt", header = TRUE, sep = '\t')
names(RATS)
str(RATS)
BPRS$treatment <- factor(BPRS$treatment)
BPRS$subject <- factor(BPRS$subject)
RATS$ID <- factor(RATS$ID)
RATS$Group <- factor(RATS$Group)
RATSL <- RATS %>% gather(key = WD, value = Weight, -ID, -Group) %>% mutate(Time = as.integer(substr(WD,3,4)))
library(tidyr)
RATSL <- RATS %>% gather(key = WD, value = Weight, -ID, -Group) %>% mutate(Time = as.integer(substr(WD,3,4)))
BPRSL <-  BPRS %>% gather(key = weeks, value = bprs, -treatment, -subject)
BPRSL <-  BPRSL %>% mutate(week = as.integer(substr(weeks,5,5)))
# Load libraries
library(dplyr); library(tidyr)
# Import data and explore structure
BPRS <- read.table("https://raw.githubusercontent.com/KimmoVehkalahti/MABS/master/Examples/data/BPRS.txt", sep  =" ", header = T)
names(BPRS)
str(BPRS) # data has 40 observations and 11 variables
summary(BPRS)
RATS <- read.table("https://raw.githubusercontent.com/KimmoVehkalahti/MABS/master/Examples/data/rats.txt", header = TRUE, sep = '\t')
names(RATS)
str(RATS) # data has 16 observations and 13 variables
summary(RATS)
# Convert the categorical variables of both data sets to factors
BPRS$treatment <- factor(BPRS$treatment)
BPRS$subject <- factor(BPRS$subject)
RATS$ID <- factor(RATS$ID)
RATS$Group <- factor(RATS$Group)
# Convert the data sets to long form
BPRSL <-  BPRS %>% gather(key = weeks, value = bprs, -treatment, -subject)
RATSL <- RATS %>% gather(key = WD, value = Weight, -ID, -Group) %>% mutate(Time = as.integer(substr(WD,3,4)))
# Extract the week number
BPRSL <-  BPRSL %>% mutate(week = as.integer(substr(weeks,5,5)))
# Save file
write.csv(RATSL, file = "rats.csv")
write.csv(BPRSL, file = "bprs.csv")
glimpse(BPRSL)
glimpse(BRPS)
glimpse(BPRS)
glimpse(RATSL)
install.packages("lme4")
library(stringr); library(dplyr); library(GGally); library(corrplot); library(ggplot2); library(tidyr); library(MASS); library(boot); library(lme4)
write.csv(RATSL, file = "ratsl.csv")
write.csv(BPRSL, file = "bprsl.csv")
library(dplyr); library(tidyr)
# Import data and explore structure
BPRS <- read.table("https://raw.githubusercontent.com/KimmoVehkalahti/MABS/master/Examples/data/BPRS.txt", sep  =" ", header = T)
names(BPRS)
str(BPRS) # data has 40 observations and 11 variables
summary(BPRS)
glimpse(BPRS)
RATS <- read.table("https://raw.githubusercontent.com/KimmoVehkalahti/MABS/master/Examples/data/rats.txt", header = TRUE, sep = '\t')
names(RATS)
str(RATS) # data has 16 observations and 13 variables
summary(RATS)
# Convert the categorical variables of both data sets to factors
BPRS$treatment <- factor(BPRS$treatment)
BPRS$subject <- factor(BPRS$subject)
RATS$ID <- factor(RATS$ID)
RATS$Group <- factor(RATS$Group)
# Convert the data sets to long form
BPRSL <-  BPRS %>% gather(key = weeks, value = bprs, -treatment, -subject)
RATSL <- RATS %>% gather(key = WD, value = Weight, -ID, -Group) %>% mutate(Time = as.integer(substr(WD,3,4)))
# Extract the week number
BPRSL <-  BPRSL %>% mutate(week = as.integer(substr(weeks,5,5)))
# Look at new data
glimpse(BPRSL)
glimpse(RATSL)
# By converting the data sets to long form and extracting the week number/time we make signifiantly expand the dataset. BPRS goes from 40 observations to 360 and the RATS data goes from 16 observations to 176.
# Also combined multiple columns and collapses them into key-value pairs which condenses the number of variables.
# Save file
write.csv(RATSL, file = "ratsl.csv")
write.csv(BPRSL, file = "bprsl.csv")
RATSL <- read.csv("ratsl.csv", header = T)
BPRSL <- read.csv("bprsl.csv", header = T)
RATS$ID <- factor(RATS$ID)
RATS$Group <- factor(RATS$Group)
glimpse(RATSL)
summary(RATSL)
glimpse(RATSL)
str(RATSL)
glimpse(RATSL)
RATS$ID <- factor(RATS$ID)
RATS$Group <- factor(RATS$Group)
glimpse(RATSL)
str(RATSL)
str(RATSL)
RATS$ID <- factor(RATS$ID)
RATS$Group <- factor(RATS$Group)
glimpse(RATSL)
summary(RATSL)
ggplot(RATSL, aes(x = Time, y = Weight, group = ID)) +
geom_line(aes(linetype = Group)) +
scale_x_continuous(name = "Time (days)", breaks = seq(0, 60, 10)) +
scale_y_continuous(name = "Weight (grams)") +
theme(legend.position = "top")
RATSL$ID <- factor(RATSL$ID)
RATSL$Group <- factor(RATSL$Group)
str(RATSL)
summary(RATSL)
ggplot(RATSL, aes(x = Time, y = Weight, group = ID)) +
geom_line(aes(linetype = Group)) +
scale_x_continuous(name = "Time (days)", breaks = seq(0, 60, 10)) +
scale_y_continuous(name = "Weight (grams)") +
theme(legend.position = "top")
ggplot(RATSL, aes(x = Time, y = Weight, group = ID)) +
geom_line(aes(linetype = Group)) +
scale_x_continuous(name = "Time (days)", breaks = seq(0, 60, 10)) +
scale_y_continuous(name = "Weight (grams)") +
theme(legend.position = "top")
ggplot(RATSL, aes(x = week , y = ratsl, linetype = subject)) +
geom_line() +
scale_linetype_manual(values = rep(1:10, times=4)) +
facet_grid(. ~ treatment, labeller = label_both) +
theme(legend.position = "none") +
scale_y_continuous(limits = c(min(RATSL$ratsl), max(RATSL$ratsl)))
ggplot(RATSL, aes(x = Time, y = Weight, group = ID)) +
geom_line(aes(linetype = Group)) +
scale_x_continuous(name = "Time (days)", breaks = seq(0, 60, 10)) +
scale_y_continuous(name = "Weight (grams)") +
theme(legend.position = "top")
RATSL <- RATSL %>%
group_by(weight) %>%
mutate(stdratsl = (weight - mean(weight))/sd(weight) ) %>%
ungroup()
RATSL <- RATSL %>%
group_by(Group) %>%
mutate(stdratsl = (weight - mean(weight))/sd(weight) ) %>%
ungroup()
RATSL <- RATSL %>%
group_by(Group) %>%
mutate(stdweight = (weight - mean(weight))/sd(weight) ) %>%
ungroup()
RATSL <- RATSL %>%
group_by(Group) %>%
mutate(stdweight = (Weight - mean(Weight))/sd(Weight) ) %>%
ungroup()
glimpse(RATSL)
summary(RATSL)
ggplot(RATSL, aes(x = Time, y = stdweight, group = ID)) +
geom_line(aes(linetype = Group)) +
scale_x_continuous(name = "Time (days)", breaks = seq(0, 60, 10)) +
scale_y_continuous(name = "Standardized Weight (grams)") +
theme(legend.position = "top")
n <- RATSL$Time %>% unique() %>% length()
RATSS <- RATSL %>%
group_by(Group, Time) %>%
summarise( mean = mean(Weight), se = sd(Weight)/sqrt(n) ) %>%
ungroup()
glimpse(RATSS)
ggplot(RATSS, aes(x = Time, y = mean, linetype = Group, shape = Group)) +
geom_line() +
scale_linetype_manual(values = c(1,2)) +
geom_point(size=3) +
scale_shape_manual(values = c(1,2)) +
geom_errorbar(aes(ymin = mean - se, ymax = mean + se, linetype="1"), width=0.3) +
theme(legend.position = c(0.8,0.8)) +
scale_y_continuous(name = "mean(Weight) +/- se(Weight)")
ggplot(RATSS, aes(x = Time, y = mean, linetype = Group, shape = Group)) +
geom_line() +
geom_point(size=3) +
scale_shape_manual(values = c(1,2)) +
geom_errorbar(aes(ymin = mean - se, ymax = mean + se, linetype="1"), width=0.3) +
theme(legend.position = c(0.8,0.8)) +
scale_y_continuous(name = "mean(Weight) +/- se(Weight)")
ggplot(RATSS, aes(x = Time, y = mean, linetype = Group, shape = Group)) +
geom_line() +
geom_point(size=3) +
geom_errorbar(aes(ymin = mean - se, ymax = mean + se, linetype="1"), width=0.3) +
theme(legend.position = c(0.8,0.8)) +
scale_y_continuous(name = "mean(Weight) +/- se(Weight)")
RATSL8S <- RATSL %>%
filter(Group) %>%
group_by(Group, subject) %>%
summarise( mean=mean(Weight) ) %>%
ungroup()
# Create a summary data
RATSL8S <- RATSL %>%
filter(Group > 0) %>%
group_by(Group, subject) %>%
summarise( mean=mean(Weight) ) %>%
ungroup()
RATSL8S <- RATSL %>%
filter(Group, ID) %>%
group_by(Group, subject) %>%
summarise( mean=mean(Weight) ) %>%
ungroup()
# Create a summary data
RATSL8S <- RATSL %>%
filter(Group, Id) %>%
group_by(Group, subject) %>%
summarise( mean=mean(Weight) ) %>%
ungroup()
RATSL8S <- RATSL %>%
group_by(Group, subject) %>%
summarise( mean=mean(Weight) ) %>%
ungroup()
RATSL8S <- RATSL %>%
group_by(Group, ID) %>%
summarise( mean=mean(Weight) ) %>%
ungroup()
# Glimpse the data
glimpse(BPRSL8S)
RATSL8S <- RATSL %>%
group_by(Group, ID) %>%
summarise( mean=mean(Weight) ) %>%
ungroup()
RATSL8S <- RATSL %>%
group_by(Group, ID) %>%
summarise( mean=mean(Weight) ) %>%
ungroup()
# Glimpse the data
glimpse(RATSL8S)
ggplot(RATSL8S, aes(x = Group, y = Weight)) +
geom_boxplot() +
stat_summary(fun.y = "mean", geom = "point", shape=23, size=4, fill = "white") +
scale_y_continuous(name = "mean(Weight), time")
ggplot(RATSL8S, aes(x = Group, y = mean)) +
geom_boxplot() +
stat_summary(fun.y = "mean", geom = "point", shape=23, size=4, fill = "white") +
scale_y_continuous(name = "mean(Weight), time")
RATSL8S1 <- RATSL8S %>%
filter(mean < 60)
RATSL8S1 <- RATSL8S %>%
filter(mean < 60)
t.test(mean ~ Group, data = RATSL8S1, var.equal = TRUE)
fit <- lm(mean ~ Group + treatment, data = BPRSL8S2)
fit <- lm(mean ~ Group + treatment, data = RATSL8S2)
RATSL8S2 <- RATSL8S %>%
mutate(baseline = RATS$week0)
RATSL8S2 <- RATSL8S %>%
mutate(baseline = RATS$WD1)
fit <- lm(mean ~ Group + treatment, data = RATSL8S2)
fit <- lm(mean ~ Group, data = RATSL8S2)
anova(fit)
t.test(mean ~ Group, data = RATSL8S1, var.equal = TRUE)
t.test(mean ~ Group, data = RATSL8S, var.equal = TRUE)
BPRS$treatment <- factor(BPRS$treatment)
BPRS$subject <- factor(BPRS$subject)
str(BPRS)
summary(BPRS)
ggplot(BPRSL, aes(x = week , y = bprs, linetype = subject)) +
geom_line() +
scale_linetype_manual(values = rep(1:10, times=4)) +
facet_grid(. ~ treatment, labeller = label_both) +
theme(legend.position = "none") +
scale_y_continuous(limits = c(min(BPRSL$bprs), max(BPRSL$bprs)))
ggplot(BPRSL, aes(x = week , y = bprs,)) +
geom_line() +
scale_linetype_manual(values = rep(1:10, times=4)) +
facet_grid(. ~ treatment, labeller = label_both) +
theme(legend.position = "none") +
scale_y_continuous(limits = c(min(BPRSL$bprs), max(BPRSL$bprs)))
ggplot(BPRSL, aes(x = week, y = bprs)) +
geom_line(aes(linetype = subject)) +
scale_x_continuous(name = "Time (days)", breaks = seq(0, 60, 10)) +
scale_y_continuous(name = "Weight (grams)") +
theme(legend.position = "top")
ggplot(BPRSL, aes(x = week , y = bprs, linetype = subject)) +
geom_line() +
scale_linetype_manual(values = rep(1:10, times=4)) +
facet_grid(. ~ treatment, labeller = label_both) +
theme(legend.position = "none") +
scale_y_continuous(limits = c(min(BPRSL$bprs), max(BPRSL$bprs)))
BPRSL$treatment <- factor(BPRSL$treatment)
BPRSL$subject <- factor(BPRSL$subject)
str(BPRSL)
summary(BPRSL)
ggplot(BPRSL, aes(x = week , y = bprs, linetype = subject)) +
geom_line() +
scale_linetype_manual(values = rep(1:10, times=4)) +
facet_grid(. ~ treatment, labeller = label_both) +
theme(legend.position = "none") +
scale_y_continuous(limits = c(min(BPRSL$bprs), max(BPRSL$bprs)))
BPRS_reg <- lm(bprs ~ week + treatment, data = BPRSL)
summary(RATS_reg)
summary(BPRS_reg)
BPRS_ref <- lmer(bprs ~ week + treatment + (week | subject), data = BPRSL, REML = FALSE)
summary(BPRS_ref)
BPRS_ref <- lmer(bprs ~ week + treatment + (1 | subject), data = BPRSL, REML = FALSE)
summary(BPRS_ref)
BRPS_ref1 <- lmer(bprs ~ week + treatment + (week | subject), data = BPRSL, REML = FALSE)
summary(BPRS_ref1)
BPRS_ref1 <- lmer(bprs ~ week + treatment + (week | subject), data = BPRSL, REML = FALSE)
summary(BPRS_ref1)
anova(BPRS_ref1, BPRS_ref)
BPRS_ref2 <- lmer(bprs ~ week * treatment + (week | subject), data = BPRSL, REML = FALSE)
summary(BPRS_ref2)
anova(BPRS_ref2, BPRS_ref1)
ggplot(BPRSL, aes(x = week, y = bprs, group = subject)) +
geom_line(aes(linetype = Group)) +
scale_x_continuous(name = "Time (week)", breaks = seq(0, 60, 20)) +
scale_y_continuous(name = "Bprs") +
theme(legend.position = "top")
ggplot(BPRSL, aes(x = week, y = treatment, group = subject)) +
geom_line(aes(linetype = Group)) +
scale_x_continuous(name = "Time (week)", breaks = seq(0, 60, 20)) +
scale_y_continuous(name = "Bprs") +
theme(legend.position = "top")
ggplot(BPRSL, aes(x = week, y = treatment, group = bprs)) +
geom_line(aes(linetype = Group)) +
scale_x_continuous(name = "Time (week)", breaks = seq(0, 60, 20)) +
scale_y_continuous(name = "Bprs") +
theme(legend.position = "top")
ggplot(BPRSL, aes(x = week, y = treatment, group = subject)) +
geom_line(aes(linetype = treatment)) +
scale_x_continuous(name = "Time (week)", breaks = seq(0, 60, 20)) +
scale_y_continuous(name = "Bprs") +
theme(legend.position = "top")
Fitted <- fitted(BPRS_ref2)
BPRSL <- BPRSL %>%
mutate(Fitted)
ggplot(BPRSL, aes(x = week, y = Fitted, group = subject)) +
geom_line(aes(linetype = Group)) +
scale_x_continuous(name = "Time (days)", breaks = seq(0, 60, 20)) +
scale_y_continuous(name = "Fitted weight (grams)") +
theme(legend.position = "top")
ggplot(BPRSL, aes(x = week, y = Fitted, group = subject)) +
geom_line(aes(linetype = treatment)) +
scale_x_continuous(name = "Time (days)", breaks = seq(0, 60, 20)) +
scale_y_continuous(name = "Fitted weight (grams)") +
theme(legend.position = "top")
ggplot(BPRSL, aes(x = week, y = Fitted, group = subject)) +
geom_smooth(aes(linetype = treatment)) +
scale_x_continuous(name = "Time (days)", breaks = seq(0, 60, 20)) +
scale_y_continuous(name = "Fitted weight (grams)") +
theme(legend.position = "top")
ggplot(BPRSL, aes(x = week, y = Fitted, group = subject)) +
geom_smooth(aes(linetype = treatment)) +
scale_x_continuous(name = "Time") +
scale_y_continuous(name = "Fitted bprs") +
theme(legend.position = "top")
ggplot(BPRSL, aes(x = week, y = Fitted, group = subject)) +
geom_line(aes(linetype = treatment)) +
scale_x_continuous(name = "Time") +
scale_y_continuous(name = "Fitted bprs") +
theme(legend.position = "top")
ggplot(BPRSL, aes(x = week, y = Fitted, group = subject)) +
geom_line(aes(linetype = treatment)) +
scale_x_continuous(name = "Time", breaks = seq(0, 60, 20)) +
scale_y_continuous(name = "Fitted bprs") +
theme(legend.position = "top")
ggplot(BPRSL, aes(x = week, y = Fitted, group = subject)) +
geom_smooth(aes(linetype = treatment)) +
scale_x_continuous(name = "Time", breaks = seq(0, 60, 20)) +
scale_y_continuous(name = "Fitted bprs") +
theme(legend.position = "top")
ggplot(BPRSL, aes(x = week, y = Fitted, group = subject)) +
geom_smooth(aes(linetype = Group)) +
scale_x_continuous(name = "Time", breaks = seq(0, 60, 20)) +
scale_y_continuous(name = "Fitted bprs") +
theme(legend.position = "top")
ggplot(BPRSL, aes(x = bprs, y = Fitted, group = subject)) +
geom_smooth(aes(linetype = Group)) +
scale_x_continuous(name = "Time", breaks = seq(0, 60, 20)) +
scale_y_continuous(name = "Fitted bprs") +
theme(legend.position = "top")
ggplot(BPRSL, aes(x = week, y = Fitted, group = subject)) +
geom_smooth(aes(linetype = Group)) +
scale_x_continuous(name = "Time", breaks = seq(0, 60, 20)) +
scale_y_continuous(name = "Fitted bprs") +
theme(legend.position = "top")
ggplot(BPRSL, aes(x = week, y = Fitted, group = subject)) +
geom_smooth(aes(linetype = Group)) +
scale_x_continuous(name = "Time", breaks = seq(0, 60, 20)) +
scale_y_continuous(name = "Fitted bprs") +
theme(legend.position = "top")
ggplot(BPRSL, aes(x = week, y = Fitted, group = subject)) +
geom_smooth(aes(linetype = treatment)) +
scale_x_continuous(name = "Time", breaks = seq(0, 60, 20)) +
scale_y_continuous(name = "Fitted bprs") +
theme(legend.position = "top")
ggplot(BPRSL, aes(x = week, y = Fitted, group = subject)) +
geom_smooth(aes(linetype = subject)) +
scale_x_continuous(name = "Time", breaks = seq(0, 60, 20)) +
scale_y_continuous(name = "Fitted bprs") +
theme(legend.position = "top")
ggplot(BPRSL, aes(x = week, y = Fitted, group = subject)) +
geom_smooth(aes(linetype = subject)) +
scale_x_continuous(name = "Time",) +
scale_y_continuous(name = "Fitted bprs") +
theme(legend.position = "top")
BPRSL <- BPRSL %>%
mutate(Fitted = Fitted)
ggplot(BPRSL, aes(x = week, y = Fitted, group = subject)) +
geom_smooth(aes(linetype = subject)) +
scale_x_continuous(name = "Time",) +
scale_y_continuous(name = "Fitted bprs") +
theme(legend.position = "top")
ggplot(BPRSL, aes(x = week, y = Fitted, group = subject)) +
geom_smooth(aes(linetype = treatment)) +
scale_x_continuous(name = "Time",) +
scale_y_continuous(name = "Fitted bprs") +
theme(legend.position = "top")
BPRSL <- BPRSL %>%
mutate(BPRSL, Fitted = Fitted)
mutate(BPRSL, Fitted = Fitted)
ggplot(BPRSL, aes(x = week, y = Fitted, group = subject)) +
geom_smooth(aes(linetype = treatment)) +
scale_x_continuous(name = "Time",) +
scale_y_continuous(name = "Fitted bprs") +
theme(legend.position = "top")
ggplot(BPRSL, aes(x = week, y = Fitted, group = subject)) +
geom_smooth(aes(linetype = subject)) +
scale_x_continuous(name = "Time",) +
scale_y_continuous(name = "Fitted bprs") +
theme(legend.position = "top")
setwd("~/GitHub/IODS-project/data")
ggplot(RATSL, aes(x = Time, y = stdweight, group = ID)) +
geom_line(aes(linetype = Group)) +
scale_x_continuous(name = "Time (days)", breaks = seq(0, 60, 10)) +
scale_y_continuous(name = "Standardized Weight (grams)") +
theme(legend.position = "top")
setwd("~/GitHub/IODS-project/data")
setwd("~/GitHub/IODS-project/data")
library(stringr); library(dplyr); library(GGally); library(corrplot); library(ggplot2); library(tidyr); library(MASS); library(boot); library(lme4)
RATSL <- read.csv("ratsl.csv", sep  =" ", header = T)
BPRSL <- read.csv("bprsl.csv", sep  =" ", header = T)
RATSL$ID <- factor(RATSL$ID)
library(stringr); library(dplyr); library(GGally); library(corrplot); library(ggplot2); library(tidyr); library(MASS); library(boot); library(lme4)
RATSL <- read.csv("ratsl.csv", sep  =" ", header = T)
RATSL <- read.csv("ratsl.csv", sep  =" ", header = T)
setwd("~/GitHub/IODS-project/data")
RATSL <- read.csv("ratsl.csv", sep  =" ", header = T)
